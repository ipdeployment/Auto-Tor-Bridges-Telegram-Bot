name: Fetch and Share Tor Bridges

on:
  workflow_dispatch:

jobs:
  fetch-bridges:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Tor, obfs4proxy, jq, qrencode and 7zip
        run: |
          sudo apt-get update
          sudo apt-get install -y tor obfs4proxy jq qrencode p7zip-full

      - name: Configure and Start Tor with obfs4 Bridge
        run: |
          mkdir -p config
          if [ -f config/history.json ]; then
            BRIDGE=$(jq -r '.last_bridge // ""' config/history.json)
            if [ -z "$BRIDGE" ] && [ -f config/obfs4_ipv4.json ]; then
              COUNT=$(jq -r '.bridges | length' config/obfs4_ipv4.json)
              if [ "$COUNT" -gt 0 ]; then
                INDEX=$(shuf -i 0-$((COUNT-1)) -n 1)
                BRIDGE=$(jq -r ".bridges[$INDEX]" config/obfs4_ipv4.json)
              fi
            fi
          fi
          if [ -z "$BRIDGE" ]; then
            BRIDGE="obfs4 72.10.162.51:12693 8F219F64DC11351F00C3A50B64990EE50E784F74 cert=/I3NYd0UcxUh83Xmsj2j8GNOeNBHmJ8jspO0/3ijqKxAlIBedJ9/AC80fXkY6IyEwXYzQQ iat-mode=1"
          fi
          echo "UseBridges 1" > torrc
          echo "ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy" >> torrc
          echo "Bridge $BRIDGE" >> torrc
          echo "Log notice stdout" >> torrc
          tor -f torrc &
          sleep 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 python-telegram-bot requests[socks]

      - name: Fetch and Send Bridges
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          mkdir -p temp
          pkill -f tor || echo "No Tor process to kill"
          python scripts/fetch_bridges.py
          timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
          [ -f temp/bridges_${timestamp}.txt ] && git add temp/bridges_${timestamp}.txt || echo "No bridges file to add"
          [ -f temp/bridges_qr_codes_${timestamp}.7z ] && git add temp/bridges_qr_codes_${timestamp}.7z || echo "No QR codes archive to add"
          git add config/*.json || echo "No config files to add"
          git commit -m "Update bridges and QR codes with timestamp $timestamp" || echo "No changes to commit"
          git push

      - name: Update Bridge List
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  # اضافه شده
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}      # اضافه شده
        run: |
          python scripts/update_bridge_list.py

      - name: Commit and Push Updated Bridges
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
          git add config/*.json temp/*
          git commit -m "Append new Tor bridges and temp files $timestamp" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle failure notification
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python scripts/notify_failure.py